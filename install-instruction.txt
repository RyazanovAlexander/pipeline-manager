kubectl create ns app

https://docs.pingcap.com/tidb-in-kubernetes/dev/get-started
https://github.com/minio/operator/blob/master/README.md
https://docs.min.io/minio/k8s/tutorials/deploy-minio-tenant.html

you can go to Hyper-V manager & connect to the newly created VM called 'minikube', the username is 'docker' and password is 'tcuser'
sudo mkdir /mnt/disks/ssd1
sudo mkdir /mnt/disks/ssd2
sudo mkdir /mnt/disks/ssd3
sudo mkdir /mnt/disks/ssd4

apiVersion: v1
kind: PersistentVolume
metadata:
   name: minio-1-pv-1
spec:
   capacity:
      storage: 256Mi
   volumeMode: Filesystem
   accessModes:
   - ReadWriteOnce
   persistentVolumeReclaimPolicy: Retain
   storageClassName: local-storage
   local:
      path: /mnt/disks/ssd1
   nodeAffinity:
      required:
         nodeSelectorTerms:
         - matchExpressions:
           - key: kubernetes.io/hostname
             operator: In
             values:
             - minikube


kubectl minio tenant create minio-tenant-1 --servers 1 --volumes 4 --capacity 1Gi --namespace minio-tenant-1 --storage-class local-storage

Tenant 'minio-tenant-1' created in 'minio-tenant-1' Namespace

←[0m←[34m  Username: admin
←[0m←[34m  Password: 27b8e3ac-56b0-4179-9d74-eb243d87c7b8
←[0m←[34m  Note: Copy the credentials to a secure location. MinIO will not display these again.

←[0m+-------------+------------------------+----------------+--------------+--------------+
| APPLICATION | SERVICE NAME           | NAMESPACE      | SERVICE TYPE | SERVICE PORT |
+-------------+------------------------+----------------+--------------+--------------+
| MinIO       | minio                  | minio-tenant-1 | ClusterIP    | 443          |
| Console     | minio-tenant-1-console | minio-tenant-1 | ClusterIP    | 9443         |
+-------------+------------------------+----------------+--------------+--------------+

https://github.com/minio/charts 

NAMESPACE: minio
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
Minio can be accessed via port 9000 on the following DNS name from within your cluster:
minio-1620205655.minio.svc.cluster.local

To access Minio from localhost, run the below commands:
  1. export POD_NAME=$(kubectl get pods --namespace minio -l "release=minio-1620205655" -o jsonpath="{.items[0].metadata.name}")
  2. kubectl port-forward $POD_NAME 9000 --namespace minio

You can now access Minio server on http://localhost:9000. Follow the below steps to connect to Minio server with mc client:
  1. Download the Minio mc client - https://docs.minio.io/docs/minio-client-quickstart-guide
  2. Get the ACCESS_KEY=$(kubectl get --namespace minio secret minio-1620205655 -o jsonpath="{.data.accesskey}" | base64 --decode)
             SECRET_KEY=$(kubectl get --namespace minio secret minio-1620205655 -o jsonpath="{.data.secretkey}" | base64 --decode)
  3. mc alias set minio-1620205655-local http://localhost:9000 "$ACCESS_KEY" "$SECRET_KEY" --api s3v4
  4. mc ls minio-1620205655-local

4Z3g9MxVyyb1CLz9967x
EAg45XYgc3c08ua1gXCZ07mrVlraXnVEWkJt4P8a

protoc --go_out=. --go_opt=paths=source_relative \
    --go-grpc_out=. --go-grpc_opt=paths=source_relative \
    proto/reverse.proto
	
protoc -Iproto proto/reverse.proto --go_opt=paths=source_relative --go_out=./proto --go-grpc_out=./proto --go-grpc_opt=paths=source_relative
protoc -Iproto ../Worker.Proto/reverse.proto --go_opt=paths=source_relative --go_out=./internal/proto/ --go-grpc_out=./internal/proto/ --go-grpc_opt=paths=source_relative
protoc -I ../Worker.Proto/ ../Worker.Proto/reverse.proto --go_opt=paths=source_relative --go_out=./internal/proto/ --go-grpc_out=./internal/proto/ --go-grpc_opt=paths=source_relative

protoc -I ../Worker.Proto/ ../Worker.Proto/reverse.proto --go_opt=paths=source_relative --go_out=./internal/server/ --go-grpc_out=./internal/server/ --go-grpc_opt=paths=source_relative
protoc -I ../Worker.Proto/ ../Worker.Proto/reverse.proto --go_out=plugins=grpc:./internal/server

protoc.exe -I ../Worker.Proto --csharp_out . --grpc_out . ../Worker.Proto/reverse.proto --plugin=protoc-gen-grpc=grpc_csharp_plugin.exe
protoc.exe -I ../Worker.Proto --csharp_out=. --grpc_out=. ../Worker.Proto/reverse.proto --plugin=protoc-gen-grpc=C:\Users\Alexander\.nuget\packages\grpc.tools\2.37.1\tools\windows_x64\grpc_csharp_plugin.exe
